"""
Django settings for omsy project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import datetime
import os

from apps.utils.manage_secret_key import manage_secret_key


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = manage_secret_key()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

#ALLOWED_HOSTS = ['kronos.kayman.biz', 'localhost']

ALLOWED_HOSTS = ['kronos.kayman.biz', 'localhost', '127.0.0.1','9786-119-155-10-39.ngrok-free.app']


AUTH_USER_MODEL = 'authentication.User'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # apps
    'apps.api.apps.ApiConfig',
    'apps.authentication.apps.AuthConfig',
    'apps.notifications.apps.NotificationsConfig',
    'apps.time_tracker.apps.TimeTrackerConfig',
    'apps.reports.apps.ReportsConfig',
    'apps.utils.apps.UtilsConfig',
    # 3d party apps
    'corsheaders',
    'rest_framework',
    'django_filters',
    'drf_yasg',
    'auditlog',
    'rest_framework_filters',
    'solo',
    'rest_framework_jwt',
    'rest_framework_jwt.blacklist'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # custom
    'apps.utils.request_middleware.RequestMiddleware',
    'auditlog.middleware.AuditlogMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'staticfiles'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # custom
                'apps.utils.context_processors.get_general_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    # Auth
    'DEFAULT_PERMISSION_CLASSES': (
        'apps.authentication.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'apps.authentication.authentication.CsrfExemptAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication'
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        # 'rest_framework_filters.backends.RestFrameworkFilterBackend',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,
    #'DATETIME_FORMAT': '%a %m/%d/%Y %-I:%M %p',
    'DATETIME_FORMAT': '%a %m/%d/%Y %I:%M %p',
    #'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S.%f%z',
    'DATETIME_INPUT_FORMATS': ('%m/%d/%Y %H:%M %p', '%a %m/%d/%Y %H:%M %p'),
    'DATE_INPUT_FORMATS': ('%m-%d-%Y', '%a %m-%d-%Y'),
    'TIME_FORMAT': '%I:%M %p',
    'TIME_INPUT_FORMATS': ('%H:%M %p',)
}

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=3),
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=5),
    'JWT_ALLOW_REFRESH': True,
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'apps.authentication.jwt_utils.jwt_response_payload_handler'
}

SWAGGER_SETTINGS = {
    'DEFAULT_AUTO_SCHEMA_CLASS': 'apps.utils.schema_view.SwaggerAutoSchema',
    'DEFAULT_FIELD_INSPECTORS': [
        'drf_yasg.inspectors.CamelCaseJSONFilter',
        'drf_yasg.inspectors.ReferencingSerializerInspector',
        'drf_yasg.inspectors.RelatedFieldInspector',
        'drf_yasg.inspectors.ChoiceFieldInspector',
        'drf_yasg.inspectors.FileFieldInspector',
        'drf_yasg.inspectors.DictFieldInspector',
        'drf_yasg.inspectors.JSONFieldInspector',
        'drf_yasg.inspectors.HiddenFieldInspector',
        'drf_yasg.inspectors.RecursiveFieldInspector',
        'drf_yasg.inspectors.SerializerMethodFieldInspector',
        'drf_yasg.inspectors.SimpleFieldInspector',
        'drf_yasg.inspectors.StringDefaultFieldInspector',
        'apps.utils.schema_view.FieldInspector',
    ]
}


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = False

USE_TZ = True

DATETIME_FORMAT = 'm/d/Y H:i'
DATE_FORMAT = '%m/%d/%Y'
DATE_INPUT_FORMATS = ('%m/%d/%Y',)

LOCALE_PATHS = (
    os.path.join(BASE_DIR, "locale"),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'staticfiles'),)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


# Redis
REDIS_PORT = '6379'
REDIS_HOST = 'localhost'

# Celery
CELERY_REDIS_DB = '0'
CELERY_BROKER_URL = 'redis://{0}:{1}/{2}'.format(REDIS_HOST, REDIS_PORT, CELERY_REDIS_DB)
CELERY_RESULT_BACKEND = 'redis://{0}:{1}/{2}'.format(REDIS_HOST, REDIS_PORT, CELERY_REDIS_DB)
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE

CSRF_TRUSTED_ORIGINS = ['http://localhost:3000', 'http://localhost:8000', 'https://kro-nos.com','https://9786-119-155-10-39.ngrok-free.app']
# CSRF_COOKIE_PATH = '/'
CSRF_COOKIE_SAMESITE = 'Strict'

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = 'None'
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": CELERY_BROKER_URL,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# Mail
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_HOST = None
EMAIL_PORT = None
EMAIL_HOST_USER = None
EMAIL_HOST_PASSWORD = None
EMAIL_USE_TLS = True

DEFAULT_FROM_EMAIL = None
EMAIL_SUBJECT_PATTERN = 'KROnos - %s'


# Pusher Beamns
PUSHER_INSTANCE_ID = '6ac9d209-a26a-4859-98b3-facf9c526ebf'
PUSHER_SECRET_KEY = 'FF0D3F6F64E544D2DF7C0D247F623B88D29374706F89D0D51ABE8FC76D86C596'

PUSHER_APP_ID = '953083',
PUSHER_KEY = 'ed32d244a8f3ef23a6b1',
PUSHER_SECRET = '7db8eb0c40666b251b07',
# Pusher Channels
# PUSHER_APP_ID = None,
# PUSHER_KEY = None,
# PUSHER_SECRET = None,
PUSHER_CLUSTER = 'us3',
PUSHER_USE_SSL = True


# envs from the docker container
FRONT_HOST = os.environ.get('FRONT_HOST', 'https://kandr-test.atomcream.com')
STATIC_HOST = os.environ.get('STATIC_HOST', '')

# name APP
APP_NAME = "com.kroperating.reporttool"
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = ['http://localhost:3000','http://192.168.1.24:8000']
#CORS_ALLOWED_ORIGINS = ['http://localhost:3000', 'http://127.0.01:3000', 'http://127.0.0.1:8000']
CORS_ALLOWED_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = ['http://localhost:3000','http://192.168.1.24:8000']
#CORS_ORIGIN_WHITELIST = ['http://localhost:3000', 'http://127.0.0.1:8000']
# CORS_ALLOW_HEADERS = ['x-csrftoken', 'accept', 'content-type']
